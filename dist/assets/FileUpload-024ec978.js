import{a$ as $,R as M,r as F,b as x,a4 as y}from"./index-a6150745.js";var g=Math.floor(Math.random()*16777215),S=r.index=parseInt(Math.random()*16777215,10),m=(typeof process>"u"||typeof process.pid!="number"?Math.floor(Math.random()*1e5):process.pid)%65535,b=(()=>{try{return _Buffer}catch{try{return Buffer}catch{return null}}})(),c=function(t){return!!(t!=null&&t.constructor&&typeof t.constructor.isBuffer=="function"&&t.constructor.isBuffer(t))},w=[];for(var o=0;o<256;o++)w[o]=(o<=15?"0":"")+o.toString(16);var v=new RegExp("^[0-9a-fA-F]{24}$"),u=[];o=0;for(;o<10;)u[48+o]=o++;for(;o<16;)u[65-10+o]=u[97-10+o]=o++;function r(t){if(!(this instanceof r))return new r(t);if(t&&(t instanceof r||t._bsontype==="ObjectID"))return t;if(this._bsontype="ObjectID",t==null||typeof t=="number"){this.id=this.generate(t);return}var e=r.isValid(t);if(!e&&t!=null)throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");if(e&&typeof t=="string"&&t.length===24)return r.createFromHexString(t);if(t!=null&&t.length===12)this.id=t;else{if(t!=null&&typeof t.toHexString=="function")return t;throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters")}}var j=r;r.default=r;r.createFromTime=function(t){return t=parseInt(t,10)%4294967295,new r(B(8,t)+"0000000000000000")};r.createFromHexString=function(t){if(typeof t>"u"||t!=null&&t.length!==24)throw new Error("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");for(var e="",a=0;a<24;)e+=String.fromCharCode(u[t.charCodeAt(a++)]<<4|u[t.charCodeAt(a++)]);return new r(e)};r.isValid=function(t){return t==null?!1:typeof t=="number"?!0:typeof t=="string"?t.length===12||t.length===24&&v.test(t):t instanceof r?!0:c(t)?r.isValid(t.toString("hex")):typeof t.toHexString=="function"&&b&&(t.id instanceof b||typeof t.id=="string")?t.id.length===12||t.id.length===24&&v.test(t.id):!1};r.prototype={constructor:r,toHexString:function(){if(!this.id||!this.id.length)throw new Error("invalid ObjectId, ObjectId.id must be either a string or a Buffer, but is ["+JSON.stringify(this.id)+"]");if(this.id.length===24)return this.id;if(c(this.id))return this.id.toString("hex");for(var t="",e=0;e<this.id.length;e++)t+=w[this.id.charCodeAt(e)];return t},equals:function(t){return t instanceof r?this.toString()===t.toString():typeof t=="string"&&r.isValid(t)&&t.length===12&&c(this.id)?t===this.id.toString("binary"):typeof t=="string"&&r.isValid(t)&&t.length===24?t.toLowerCase()===this.toHexString():typeof t=="string"&&r.isValid(t)&&t.length===12?t===this.id:t!=null&&(t instanceof r||t.toHexString)?t.toHexString()===this.toHexString():!1},getTimestamp:function(){var t=new Date,e;return c(this.id)?e=this.id[3]|this.id[2]<<8|this.id[1]<<16|this.id[0]<<24:e=this.id.charCodeAt(3)|this.id.charCodeAt(2)<<8|this.id.charCodeAt(1)<<16|this.id.charCodeAt(0)<<24,t.setTime(Math.floor(e)*1e3),t},generate:function(t){typeof t!="number"&&(t=~~(Date.now()/1e3)),t=parseInt(t,10)%4294967295;var e=_();return String.fromCharCode(t>>24&255,t>>16&255,t>>8&255,t&255,g>>16&255,g>>8&255,g&255,m>>8&255,m&255,e>>16&255,e>>8&255,e&255)}};function _(){return S=(S+1)%16777215}function B(t,e){return e=e.toString(16),e.length===t?e:"00000000".substring(e.length,t)+e}var R=Symbol&&Symbol.for&&Symbol.for("nodejs.util.inspect.custom")||"inspect";r.prototype[R]=function(){return"ObjectID("+this+")"};r.prototype.toJSON=r.prototype.toHexString;r.prototype.toString=r.prototype.toHexString;const U=$(j);const V=({handleGetBase64:t,id:e,name:a,disabled:C},H)=>{const p=F.useRef(null),[T,h]=F.useState(null),A=s=>{var i;const n=(i=s.target.files)==null?void 0:i[0];if(n){console.log(400,n.name);const l=`${e}_${a}_${n.name}`;h(l);const f=new File([n],l,{type:n.type,lastModified:n.lastModified});console.log(700,f.name),D(f)}},D=async s=>{console.log(47,e,a);const n=new FormData;n.append("uploadedFile",s),n.append("id",e),n.append("name",a);try{const i="http://127.0.0.1:4000",l=await y.post(`${i}/upload`,n);console.log(600,l.data);const f=l.data.data;console.log("File uploaded successfully:",l.data.data),d(f,!1)}catch(i){console.error("Error uploading file:",i)}},d=async(s,n)=>{if(s){const i="http://127.0.0.1:4000",l=await y.get(`${i}/uploads/${s}`,{responseType:"arraybuffer"}),f=btoa(new Uint8Array(l.data).reduce((E,O)=>E+String.fromCharCode(O),""));t(`data:image/jpeg;base64,${f}`,a,s,n)}};return F.useImperativeHandle(H,()=>({clearFileInput:()=>{p.current&&(p.current.value="",h(null))},setFileInput:s=>{s&&d(s,!0)}})),x("div",{children:x("input",{disabled:C,type:"file",ref:p,onChange:A})})},k=M.forwardRef(V);export{k as F,U as O};
