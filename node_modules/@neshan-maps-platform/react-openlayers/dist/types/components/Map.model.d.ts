import { Map } from "ol";
import { MapOptions as MainMapOptions } from "ol/PluggableMap";
import React from "react";
import { Ol } from "@/assets/ol.model";
export interface BaseMapOptions extends MainMapOptions {
    mapType?: MapType;
    poi?: boolean;
    traffic?: boolean;
}
interface MapOptionsWithKey extends BaseMapOptions {
    key: string;
}
type MapOptionsUnion = {
    options?: BaseMapOptions;
    mapKey: string;
} | {
    options: MapOptionsWithKey;
    mapKey?: undefined;
};
export interface BaseMapProps {
    serviceKey?: string;
    zoom?: number;
    center?: CoordsObj;
    scale?: number;
    defaultType?: MapType;
    poi?: boolean;
    traffic?: boolean;
    onInit?: (ol: Ol, map: OlMap) => void;
    className?: React.HTMLAttributes<HTMLDivElement>["className"];
    style?: React.HtmlHTMLAttributes<HTMLDivElement>["style"];
}
export type MapProps = BaseMapProps & MapOptionsUnion;
export interface NeshanMapRef {
    mapContainer: React.RefObject<HTMLDivElement>;
    ol?: Ol;
    map: OlMap | null;
    isInitiated: boolean;
}
export declare interface CoordsObj {
    latitude: number;
    longitude: number;
}
export declare class OlMap extends Map {
    constructor(options: MapOptionsWithKey);
    setMapType(value: MapType): void;
    switchPoiLayer(value: boolean): void;
    switchTrafficLayer(value: boolean): void;
}
export declare type MapType = "neshan" | "dreamy" | "dreamy-gold" | "standard-night" | "standard-day" | "osm-bright";
export declare type ViewType = undefined | "desktop" | "mobile";
export declare interface Tile {
    title: MapType;
    url: string;
}
export {};
