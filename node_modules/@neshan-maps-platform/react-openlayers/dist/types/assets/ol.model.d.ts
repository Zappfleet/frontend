import mainOl from "ol";
import { OlMap } from "@/components";
import * as array from "ol/array.js";
import * as asserts from "ol/asserts.js";
import * as CenterConstraint from "ol/centerconstraint.js";
import CollectionEventType from "ol/CollectionEventType.js";
import * as color from "ol/color.js";
import * as colorlike from "ol/colorlike.js";
import * as control from "ol/control.js";
import * as coordinate from "ol/coordinate.js";
import * as css from "ol/css.js";
import * as dom from "ol/dom.js";
import * as easing from "ol/easing.js";
import * as events from "ol/events.js";
import * as extent from "ol/extent.js";
import * as featureloader from "ol/featureloader.js";
import * as format from "ol/format.js";
import * as functions from "ol/functions.js";
import * as geom from "ol/geom.js";
import * as has from "ol/has.js";
import ImageState from "ol/ImageState.js";
import * as interaction from "ol/interaction.js";
import * as layer from "ol/layer.js";
import * as loadingstrategy from "ol/loadingstrategy.js";
import MapBrowserEventType from "ol/MapBrowserEventType.js";
import MapEventType from "ol/MapEventType.js";
import MapProperty from "ol/MapProperty.js";
import * as math from "ol/math.js";
import * as net from "ol/net.js";
import * as obj from "ol/obj.js";
import ObjectEventType from "ol/ObjectEventType.js";
import * as pixel from "ol/pixel.js";
import * as proj from "ol/proj.js";
import * as render from "ol/render.js";
import * as reproj from "ol/reproj.js";
import * as resolutionconstraint from "ol/resolutionconstraint.js";
import * as rotationconstraint from "ol/rotationconstraint.js";
import * as size from "ol/size.js";
import * as source from "ol/source.js";
import * as sphere from "ol/sphere.js";
import * as string from "ol/string.js";
import * as style from "ol/style.js";
import * as tilecoord from "ol/tilecoord.js";
import * as tilegrid from "ol/tilegrid.js";
import TileState from "ol/TileState.js";
import * as TileUrlFunction from "ol/tileurlfunction.js";
import * as transform from "ol/transform.js";
import * as uri from "ol/uri.js";
import ViewHint from "ol/ViewHint.js";
import ViewProperty from "ol/ViewProperty.js";
import * as webgl from "ol/webgl.js";
import * as xml from "ol/xml.js";
export declare type Ol = {
    Map: typeof OlMap;
    array: typeof array;
    asserts: typeof asserts;
    CenterConstraint: typeof CenterConstraint;
    CollectionEventType: typeof CollectionEventType;
    color: typeof color;
    colorlike: typeof colorlike;
    control: typeof control;
    coordinate: typeof coordinate;
    css: typeof css;
    dom: typeof dom;
    easing: typeof easing;
    events: typeof events;
    extent: typeof extent;
    featureloader: typeof featureloader;
    format: typeof format;
    functions: typeof functions;
    geom: typeof geom;
    has: typeof has;
    ImageState: typeof ImageState;
    interaction: typeof interaction;
    layer: typeof layer;
    loadingstrategy: typeof loadingstrategy;
    MapBrowserEventType: typeof MapBrowserEventType;
    MapEventType: typeof MapEventType;
    MapProperty: typeof MapProperty;
    math: typeof math;
    net: typeof net;
    obj: typeof obj;
    ObjectEventType: typeof ObjectEventType;
    pixel: typeof pixel;
    proj: typeof proj;
    render: typeof render;
    reproj: typeof reproj;
    resolutionconstraint: typeof resolutionconstraint;
    rotationconstraint: typeof rotationconstraint;
    size: typeof size;
    source: typeof source;
    sphere: typeof sphere;
    string: typeof string;
    style: typeof style;
    tilecoord: typeof tilecoord;
    tilegrid: typeof tilegrid;
    TileState: typeof TileState;
    TileUrlFunction: typeof TileUrlFunction;
    transform: typeof transform;
    uri: typeof uri;
    ViewHint: typeof ViewHint;
    ViewProperty: typeof ViewProperty;
    webgl: typeof webgl;
    xml: typeof xml;
    AssertionError: typeof mainOl.AssertionError;
    Collection: typeof mainOl.Collection;
    Disposable: typeof mainOl.Disposable;
    Feature: typeof mainOl.Feature;
    Geolocation: typeof mainOl.Geolocation;
    Graticule: typeof mainOl.Graticule;
    Image: typeof mainOl.Image;
    ImageBase: typeof mainOl.ImageBase;
    ImageCanvas: typeof mainOl.ImageCanvas;
    ImageTile: typeof mainOl.ImageTile;
    Kinetic: typeof mainOl.Kinetic;
    MapBrowserEvent: typeof mainOl.MapBrowserEvent;
    MapBrowserEventHandler: typeof mainOl.MapBrowserEventHandler;
    MapEvent: typeof mainOl.MapEvent;
    Object: typeof mainOl.Object;
    Observable: typeof mainOl.Observable;
    Overlay: typeof mainOl.Overlay;
    Tile: typeof mainOl.Tile;
    TileCache: typeof mainOl.TileCache;
    TileQueue: typeof mainOl.TileQueue;
    TileRange: typeof mainOl.TileRange;
    VectorTile: typeof mainOl.VectorTile;
    View: typeof mainOl.View;
    getUid: typeof mainOl.getUid;
    VERSION: string;
};
